// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"estore-backend/server/models"
)

// GetProductsOKCode is the HTTP code returned for type GetProductsOK
const GetProductsOKCode int = 200

/*
GetProductsOK Get product list

swagger:response getProductsOK
*/
type GetProductsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Product `json:"body,omitempty"`
}

// NewGetProductsOK creates GetProductsOK with default headers values
func NewGetProductsOK() *GetProductsOK {

	return &GetProductsOK{}
}

// WithPayload adds the payload to the get products o k response
func (o *GetProductsOK) WithPayload(payload []*models.Product) *GetProductsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get products o k response
func (o *GetProductsOK) SetPayload(payload []*models.Product) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Product, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
GetProductsDefault Error

swagger:response getProductsDefault
*/
type GetProductsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProductsDefault creates GetProductsDefault with default headers values
func NewGetProductsDefault(code int) *GetProductsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetProductsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get products default response
func (o *GetProductsDefault) WithStatusCode(code int) *GetProductsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get products default response
func (o *GetProductsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get products default response
func (o *GetProductsDefault) WithPayload(payload *models.Error) *GetProductsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get products default response
func (o *GetProductsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
