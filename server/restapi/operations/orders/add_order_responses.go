// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"estore-backend/server/models"
)

// AddOrderCreatedCode is the HTTP code returned for type AddOrderCreated
const AddOrderCreatedCode int = 201

/*
AddOrderCreated Created

swagger:response addOrderCreated
*/
type AddOrderCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Order `json:"body,omitempty"`
}

// NewAddOrderCreated creates AddOrderCreated with default headers values
func NewAddOrderCreated() *AddOrderCreated {

	return &AddOrderCreated{}
}

// WithPayload adds the payload to the add order created response
func (o *AddOrderCreated) WithPayload(payload *models.Order) *AddOrderCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add order created response
func (o *AddOrderCreated) SetPayload(payload *models.Order) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrderCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
AddOrderDefault error

swagger:response addOrderDefault
*/
type AddOrderDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddOrderDefault creates AddOrderDefault with default headers values
func NewAddOrderDefault(code int) *AddOrderDefault {
	if code <= 0 {
		code = 500
	}

	return &AddOrderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add order default response
func (o *AddOrderDefault) WithStatusCode(code int) *AddOrderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add order default response
func (o *AddOrderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add order default response
func (o *AddOrderDefault) WithPayload(payload *models.Error) *AddOrderDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add order default response
func (o *AddOrderDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
