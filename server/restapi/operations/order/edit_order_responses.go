// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"estore-backend/server/models"
)

// EditOrderOKCode is the HTTP code returned for type EditOrderOK
const EditOrderOKCode int = 200

/*
EditOrderOK OK

swagger:response editOrderOK
*/
type EditOrderOK struct {

	/*
	  In: Body
	*/
	Payload *models.Order `json:"body,omitempty"`
}

// NewEditOrderOK creates EditOrderOK with default headers values
func NewEditOrderOK() *EditOrderOK {

	return &EditOrderOK{}
}

// WithPayload adds the payload to the edit order o k response
func (o *EditOrderOK) WithPayload(payload *models.Order) *EditOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit order o k response
func (o *EditOrderOK) SetPayload(payload *models.Order) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
EditOrderDefault Error

swagger:response editOrderDefault
*/
type EditOrderDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewEditOrderDefault creates EditOrderDefault with default headers values
func NewEditOrderDefault(code int) *EditOrderDefault {
	if code <= 0 {
		code = 500
	}

	return &EditOrderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the edit order default response
func (o *EditOrderDefault) WithStatusCode(code int) *EditOrderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the edit order default response
func (o *EditOrderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the edit order default response
func (o *EditOrderDefault) WithPayload(payload *models.Error) *EditOrderDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit order default response
func (o *EditOrderDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditOrderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
