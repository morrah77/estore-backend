// Code generated by go-swagger; DO NOT EDIT.

package checkout

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"estore-backend/server/models"
)

// GetCheckoutSessionOKCode is the HTTP code returned for type GetCheckoutSessionOK
const GetCheckoutSessionOKCode int = 200

/*
GetCheckoutSessionOK Get checkout session

swagger:response getCheckoutSessionOK
*/
type GetCheckoutSessionOK struct {

	/*
	  In: Body
	*/
	Payload *models.CheckoutSession `json:"body,omitempty"`
}

// NewGetCheckoutSessionOK creates GetCheckoutSessionOK with default headers values
func NewGetCheckoutSessionOK() *GetCheckoutSessionOK {

	return &GetCheckoutSessionOK{}
}

// WithPayload adds the payload to the get checkout session o k response
func (o *GetCheckoutSessionOK) WithPayload(payload *models.CheckoutSession) *GetCheckoutSessionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get checkout session o k response
func (o *GetCheckoutSessionOK) SetPayload(payload *models.CheckoutSession) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCheckoutSessionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetCheckoutSessionDefault error

swagger:response getCheckoutSessionDefault
*/
type GetCheckoutSessionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCheckoutSessionDefault creates GetCheckoutSessionDefault with default headers values
func NewGetCheckoutSessionDefault(code int) *GetCheckoutSessionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCheckoutSessionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get checkout session default response
func (o *GetCheckoutSessionDefault) WithStatusCode(code int) *GetCheckoutSessionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get checkout session default response
func (o *GetCheckoutSessionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get checkout session default response
func (o *GetCheckoutSessionDefault) WithPayload(payload *models.Error) *GetCheckoutSessionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get checkout session default response
func (o *GetCheckoutSessionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCheckoutSessionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
