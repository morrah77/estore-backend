// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"estore-backend/server/models"
)

// GetAccessTokenOKCode is the HTTP code returned for type GetAccessTokenOK
const GetAccessTokenOKCode int = 200

/*
GetAccessTokenOK Login

swagger:response getAccessTokenOK
*/
type GetAccessTokenOK struct {

	/*
	  In: Body
	*/
	Payload *models.Principal `json:"body,omitempty"`
}

// NewGetAccessTokenOK creates GetAccessTokenOK with default headers values
func NewGetAccessTokenOK() *GetAccessTokenOK {

	return &GetAccessTokenOK{}
}

// WithPayload adds the payload to the get access token o k response
func (o *GetAccessTokenOK) WithPayload(payload *models.Principal) *GetAccessTokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get access token o k response
func (o *GetAccessTokenOK) SetPayload(payload *models.Principal) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccessTokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetAccessTokenDefault Error

swagger:response getAccessTokenDefault
*/
type GetAccessTokenDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAccessTokenDefault creates GetAccessTokenDefault with default headers values
func NewGetAccessTokenDefault(code int) *GetAccessTokenDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAccessTokenDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get access token default response
func (o *GetAccessTokenDefault) WithStatusCode(code int) *GetAccessTokenDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get access token default response
func (o *GetAccessTokenDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get access token default response
func (o *GetAccessTokenDefault) WithPayload(payload *models.Error) *GetAccessTokenDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get access token default response
func (o *GetAccessTokenDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccessTokenDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
